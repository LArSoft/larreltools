#!/usr/bin/env bash

# just make a working directory
# code will be checked out from github

# Determine this command name
thisComFull=$(basename $0)
fullCom="${thisComFull%.*}"

# Usage function
function usage() {
    echo "Usage: $fullCom <working_dir> <new tag> [argoneut|dune|icarus|lariat|sbnd|uboone]"
    echo "       mkdir <working_dir>/<tag>"
    echo "       run newDev"
    echo "       git clone larsoft and specified experiment repositories from github"
    echo "  If the third argument is not specified, all experiment repositories will be cloned."
    echo
}

create_working_directory() {
  if [ -z "${working_dir}" ]
  then
      echo 'ERROR: the working directory was not specified'
      echo
      usage
      exit 1
  fi
  if [ -d ${working_dir}/${tag} ]
  then
      echo 'ERROR:  ${working_dir}/${tag} already exists!'
      usage
      exit 1
  fi
  mkdir -p ${working_dir}/${tag} || { echo "ERROR: failed to create ${working_dir}/${tag}"; exit 1; }
  mkdir -p ${working_dir}/${tag}/e19p  ${working_dir}/${tag}/e19d || { echo "ERROR: failed to create ${working_dir}/${tag}/e19p"; exit 1; }
  mkdir -p ${working_dir}/${tag}/c7p  ${working_dir}/${tag}/c7d || { echo "ERROR: failed to create ${working_dir}/${tag}/c7p"; exit 1; }
  cd ${working_dir}/${tag}
  echo "run mrb newDev"
  mrb newDev -f -v ${tag} -q e19:prof -T e19p || exit 1
  mrb newDev -f -v ${tag} -q e19:debug -T e19d || exit 1
  mrb newDev -f -v ${tag} -q c7:prof -T c7p || exit 1
  mrb newDev -f -v ${tag} -q c7:debug -T c7d || exit 1
  echo "source localProductsXXX/setup"
  source e19p/localProducts*/setup
  cd $MRB_SOURCE
  echo "checkout larsoft_suite"
  mrb g --repo-type github larsoft_suite
  echo "checkout larsoftobj_suite"
  mrb g --repo-type github larsoftobj_suite
  echo "checkout larbatch"
  mrb g --repo-type github larbatch
  echo "checkout larutils"
  mrb g --repo-type github larutils
  echo "checkout larpandoracontent"
  mrb g --repo-type github larpandoracontent
  # the github orginization for webevd is defined in mrb v4_00_02 or later
  echo "checkout webevd"
  mrb g --github-org LArSoft --repo-type github webevd
  # look for extra options 
  if [ -z "${extra_options}" ]; then
    echo "checkout dunetpc"
    mrb g dunetpc
    echo "checkout duneutil"
    mrb g duneutil
    echo "checkout lariatsoft"
    mrb g lariatsoft
    mrb g lariatfragments
    mrb g lariatutil
    echo "checkout sbndcode"
    mrb g sbndcode
    mrb g sbndutil
    echo "checkout uboonecode"
    mrb  g uboone_suite
    echo "checkout argoneutcode"
    mrb g argoneutcode
    ##echo "checkout icaruscode"
    ##mrb g icaruscode
  elif [[ ${extra_options} == "argoneut" ]]; then
    echo "checkout argoneutcode"
    mrb g argoneutcode
  elif [[ ${extra_options} == "dune" ]]; then
    echo "checkout dunetpc"
    mrb g dunetpc
    echo "checkout duneutil"
    mrb g duneutil
  elif [[ ${extra_options} == "icarus" ]]; then
    echo "checkout icaruscode"
    mrb g icaruscode
    mrb g icarusutil
  elif [[ ${extra_options} == "lariat" ]]; then
    echo "checkout lariatsoft"
    mrb g lariatsoft
    mrb g -d lariatfragments lariat-online-lariatfragments
    mrb g -d lariatutil lardbt-lariatutil
  elif [[ ${extra_options} == "sbnd" ]]; then
    echo "checkout sbndcode"
    mrb g sbndcode
    mrb g sbndutil
  elif [[ ${extra_options} == "uboone" ]]; then
    echo "checkout uboonecode"
    mrb  g uboone_suite
  else
    echo "ERROR: unrecognized option ${extra_options}"
    exit 1
  fi
}

# Determine command options (just -h for help)
while getopts ":h" OPTION
do
    case $OPTION in
        h   ) usage ; exit 0 ;;
        *   ) echo "ERROR: Unknown option" ; usage ; exit 1 ;;
    esac
done

working_dir=${1}
tag=${2}
extra_options=${3}

if [ -z "${working_dir}" ]
then
    echo 'ERROR: no working directory specified'
    usage
    exit 1
fi
if [ -z "${tag}" ]
then
    echo 'ERROR: no tag specified'
    usage
    exit 1
fi

create_working_directory 

exit 0

